import Head from "next/head";
import { FC, ReactNode, useEffect, useRef, useState } from "react";
import { CSSTransition } from "react-transition-group";
import Carousal from "~/component/Carousal";
import { ReactHookForm } from "~/component/Form";
import useResize from "~/utils/useResize";

export default function Home() {
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <Show /> */}
      {/* <Counter /> */}
      <Carousal />
      <p className="my-4 border-black p-2 ">lorme100</p>
      {/* <Box number={5000} /> */}
    </>
  );
}

const Show = () => {
  const [show, setShow] = useState(false);
  const nodeRef = useRef(null);
  return (
    <div>
      <CSSTransition
        // nodeRef={nodeRef}
        appear={show}
        in={show}
        // in={show}
        timeout={200}
        classNames="my-node"
        unmountOnExit
        // mountOnEnter
      >
        <p className="border p-4">
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Rerum, est.
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum eum
          nulla deserunt debitis in, voluptates aliquam vel dolores ab, ipsam
          ipsum reprehenderit voluptate iure molestiae expedita corporis
          voluptatibus, facere repellat! Lorem ipsum dolor sit amet consectetur
          adipisicing elit. Distinctio vitae quisquam cumque nesciunt
          reprehenderit accusantium recusandae, dolor odio est enim itaque.
          Nisi, numquam quasi? Repudiandae corrupti necessitatibus eius
          temporibus nulla.
        </p>
      </CSSTransition>
      <button onClick={(e) => setShow(!show)}>{!show ? "show" : "hide"}</button>
    </div>
  );
};

const Container = ({ children }: { children: ReactNode }) => {
  return (
    <div className="grid min-h-screen place-items-start pt-8">{children}</div>
  );
};

const Box = ({ number }: { number: number }) => {
  const device = useResize();
  return (
    <div className="rounded-sm border border-[#ddd] p-2">
      {device}--{number}
    </div>
  );
};

type Props = {
  label: ReactNode;
};
const Logger = () => {
  return <div>Logging....</div>;
};
function Counter() {
  const [count, setCount] = useState(0);
  const handleCount = () => {
    setCount(count + 1);
  };
  const result = useTest(handleCount);
  console.log(result, "reaust");
  return (
    <div>
      <button onClick={handleCount} className="border p-2 text-center">
        {count}
      </button>
    </div>
  );
}
Box.displayName = "BoxBOb";

const useTest = (cb: () => void) => {
  const ref = useRef(cb);
  const similar = ref.current === cb;
  useEffect(() => {
    ref.current = cb;
  }, [cb]);
  return similar;
};
